# version: '3.8'

services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest # Siempre es buena idea fijar una versión en producción
    container_name: n8n_local
    restart: unless-stopped
    tunnel: true  # este valor debe estar en true, para que la instancia pueda interactuar con internet 
    ports:
      - "127.0.0.1:5678:5678" # Exponer solo en localhost por seguridad inicial
    environment:
      # --- Conexión a PostgreSQL ---
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=host.docker.internal # Docker Desktop especial para referirse al host desde el contenedor
      - DB_POSTGRESDB_PORT=5433 # Puerto macbookpro
      #- DB_POSTGRESDB_PORT=5432 # Puerto estándar de PostgreSQL (imac)
      - DB_POSTGRESDB_DATABASE=n8n_db # Nombre de tu base de datos
      - DB_POSTGRESDB_USER=n8n_user # Usuario de PostgreSQL
      #- DB_POSTGRESDB_PASSWORD=sqls3rv3r # credencial IMAC
      - DB_POSTGRESDB_PASSWORD=Sqls3rv3r # credencial macbookpro
      - DB_POSTGRESDB_SCHEMA=n8n_schema  # O el schema que hayas creado, ej: n8n_schema

      # --- Configuración General n8n ---
      - N8N_HOST=localhost
      - WEBHOOK_URL=http://localhost:5678/ # Importante para que los webhooks funcionen
      - GENERIC_TIMEZONE=America/Mexico_City # Ajusta a tu zona horaria
      - N8N_ENCRYPTION_KEY=077be3dce2d7aa423e6a69b7244a6680c3e1f2079b892a37808509f448ddf532 # ¡MUY IMPORTANTE! Genera una y guárdala bien

      # --- Opcional: Para deshabilitar telemetría ---
      - N8N_DIAGNOSTICS_ENABLED=true # Para deshabilitar la telemetría
      - N8N_VERSION_NOTIFICATIONS_ENABLED=true # Para deshabilitar notificaciones de nueva versión

      # --- Opcional: Para escalar n8n (modos 'main', 'webhook', 'worker') ---
      # Para una sola instancia, 'main' es suficiente. Para escalar en K8s se usa más 'queue'.
      - EXECUTIONS_MODE=regular # Procesará todo en este contenedor
      # - EXECUTIONS_PROCESS=main # Si EXECUTIONS_MODE=queue, especificarías 'main', 'webhook', 'worker'
      # (otras variables de entorno)
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true # <--- AÑADE ESTA LÍNEA
    
    
    volumes:
      # Mapea un directorio en tu Mac a /home/node/.n8n dentro del contenedor
      # n8n almacenará aquí archivos de configuración, binarios (si los subes), etc.
      # La base de datos de workflows/ejecuciones estará en PostgreSQL.
      - ~/.n8n_local_data:/home/node/.n8n

    # --- Límites de Recursos ---
    # Docker Compose v2+ usa la sección 'deploy' para esto, aunque originalmente era para Swarm.
    # Para Docker Compose standalone, también puedes usar 'mem_limit' y 'cpus' directamente bajo el servicio.
    deploy:
      resources:
        limits:
          cpus: '1.0'   # Máximo 1 CPU core
          memory: '2G'  # Máximo 2GB de RAM
        reservations:
          cpus: '0.25'  # Reservar 0.25 CPU core
          memory: '512M' # Reservar 512MB de RAM
    # Alternativa para versiones más antiguas o si 'deploy' no funciona como esperado:
    # mem_limit: 2g
    # mem_reservation: 512m
    # cpus: 1.0 # Equivalente a --cpus="1.0"

# Nota: No necesitas una red explícita aquí ya que solo hay un servicio
# y se conectará al host de Docker.